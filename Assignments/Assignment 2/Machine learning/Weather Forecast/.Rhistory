training_data <- read.csv( paste(directory, training_data_file, sep=""))
solution_data <- read.csv( paste(directory, solution_data_file, sep=""))
input <- read.csv(paste(directory, weather_forecast_input_file, sep=""))
# training the neuralnet with the 3000 training data (12001 - 15000)
model_knn <- IBk(training_data_sample$POWER ~ training_data_sample$WS10, data = training_data_sample, Weka_control(k=50, X=TRUE))
model_knn
#library(h2o)
#library
library(RWeka)
library(rminer)
# Read in data set with applliances
setwd(getwd())
directory <- '/data/'
solution_data_file <- 'Solution.csv'
training_data_file <- 'TrainData.csv'
weather_forecast_input_file <- 'WeatherForecastInput.csv'
# Read in data set with applliances
training_data <- read.csv( paste(directory, training_data_file, sep=""))
solution_data <- read.csv( paste(directory, solution_data_file, sep=""))
input <- read.csv(paste(directory, weather_forecast_input_file, sep=""))
# training the neuralnet with the 3000 training data (12001 - 15000)
model_knn <- IBk(training_data_sample$POWER ~ training_data_sample$WS10, data = training_data_sample, Weka_control(k=50, X=TRUE))
model_knn
#library(h2o)
#library
library(RWeka)
library(rminer)
# Read in data set with applliances
setwd(getwd())
directory <- './data/'
solution_data_file <- 'Solution.csv'
training_data_file <- 'TrainData.csv'
weather_forecast_input_file <- 'WeatherForecastInput.csv'
# Read in data set with applliances
training_data <- read.csv( paste(directory, training_data_file, sep=""))
solution_data <- read.csv( paste(directory, solution_data_file, sep=""))
input <- read.csv(paste(directory, weather_forecast_input_file, sep=""))
# training the neuralnet with the 3000 training data (12001 - 15000)
model_knn <- IBk(training_data_sample$POWER ~ training_data_sample$WS10, data = training_data_sample, Weka_control(k=50, X=TRUE))
model_knn
#library(h2o)
#library
library(RWeka)
library(rminer)
# Read in data set with applliances
setwd(getwd())
directory <- './data/'
solution_data_file <- 'Solution.csv'
training_data_file <- 'TrainData.csv'
weather_forecast_input_file <- 'WeatherForecastInput.csv'
# Read in data set with applliances
training_data <- read.csv( paste(directory, training_data_file, sep=""))
solution_data <- read.csv( paste(directory, solution_data_file, sep=""))
input <- read.csv(paste(directory, weather_forecast_input_file, sep=""))
# training the neuralnet with the 3000 training data (12001 - 15000)
model_knn <- IBk(training_data_sample$POWER ~ training_data_sample$WS10, data = training_data_sample, Weka_control(k=50, X=TRUE))
model_knn
# training the neuralnet with the 3000 training data (12001 - 15000)
model_knn <- IBk(training_data_sample$POWER ~ training_data_sample$WS10, data = training_data, Weka_control(k=50, X=TRUE))
# training the neuralnet with the 3000 training data (12001 - 15000)
model_knn <- IBk(training_data_sample$POWER ~ training_data_sample$WS10, data = training_data, Weka_control(k=50, X=TRUE))
#library(h2o)
#library
library(RWeka)
library(rminer)
# Read in data set with applliances
setwd(getwd())
directory <- './data/'
solution_data_file <- 'Solution.csv'
training_data_file <- 'TrainData.csv'
weather_forecast_input_file <- 'WeatherForecastInput.csv'
# Read in data set with applliances
training_data <- read.csv( paste(directory, training_data_file, sep=""))
solution_data <- read.csv( paste(directory, solution_data_file, sep=""))
input <- read.csv(paste(directory, weather_forecast_input_file, sep=""))
# training the neuralnet with the 3000 training data (12001 - 15000)
model_knn <- IBk(training_data_sample$POWER ~ training_data_sample$WS10, data = training_data, Weka_control(k=50, X=TRUE))
model_knn
#library(h2o)
#library
library(RWeka)
library(rminer)
# Read in data set with applliances
setwd(getwd())
directory <- './data/'
solution_data_file <- 'Solution.csv'
training_data_file <- 'TrainData.csv'
weather_forecast_input_file <- 'WeatherForecastInput.csv'
# Read in data set with applliances
training_data <- read.csv( paste(directory, training_data_file, sep=""))
solution_data <- read.csv( paste(directory, solution_data_file, sep=""))
input <- read.csv(paste(directory, weather_forecast_input_file, sep=""))
# training the neuralnet with the 3000 training data (12001 - 15000)
model_knn <- IBk(training_data$POWER ~ training_data$WS10, data = training_data, Weka_control(k=50, X=TRUE))
model_knn
#library(h2o)
#library
library(RWeka)
library(rminer)
# Read in data set with applliances
setwd(getwd())
directory <- './data/'
solution_data_file <- 'Solution.csv'
training_data_file <- 'TrainData.csv'
weather_forecast_input_file <- 'WeatherForecastInput.csv'
# Read in data set with applliances
training_data <- read.csv( paste(directory, training_data_file, sep=""))
solution_data <- read.csv( paste(directory, solution_data_file, sep=""))
input <- read.csv(paste(directory, weather_forecast_input_file, sep=""))
# training the k nearest neighbour with all the traning data.
model_knn <- IBk(training_data$POWER ~ ., data = training_data, Weka_control(k=50, X=TRUE))
model_knn
#library(h2o)
#library
library(RWeka)
library(rminer)
# Read in data set with applliances
setwd(getwd())
directory <- './data/'
solution_data_file <- 'Solution.csv'
training_data_file <- 'TrainData.csv'
weather_forecast_input_file <- 'WeatherForecastInput.csv'
# Read in data set with applliances
training_data <- read.csv( paste(directory, training_data_file, sep=""))
solution_data <- read.csv( paste(directory, solution_data_file, sep=""))
input <- read.csv(paste(directory, weather_forecast_input_file, sep=""))
# training the k nearest neighbour with all the traning data.
model_knn <- IBk(training_data$POWER ~ training_data$WS10, data = training_data, Weka_control(k=50, X=TRUE))
model_knn
#library(h2o)
#library
library(RWeka)
library(rminer)
# Read in data set with applliances
setwd(getwd())
directory <- './data/'
solution_data_file <- 'Solution.csv'
training_data_file <- 'TrainData.csv'
weather_forecast_input_file <- 'WeatherForecastInput.csv'
# Read in data set with applliances
training_data <- read.csv( paste(directory, training_data_file, sep=""))
solution_data <- read.csv( paste(directory, solution_data_file, sep=""))
input <- read.csv(paste(directory, weather_forecast_input_file, sep=""))
# training the k nearest neighbour with all the traning data.
model_knn <- IBk(training_data$POWER ~ training_data$WS10, data = training_data, control = Weka_control(k=50, X=TRUE))
model_knn
#library(h2o)
#library
library(RWeka)
library(rminer)
# Read in data set with applliances
setwd(getwd())
directory <- './data/'
solution_data_file <- 'Solution.csv'
training_data_file <- 'TrainData.csv'
weather_forecast_input_file <- 'WeatherForecastInput.csv'
# Read in data set with applliances
training_data <- read.csv( paste(directory, training_data_file, sep=""))
solution_data <- read.csv( paste(directory, solution_data_file, sep=""))
input <- read.csv(paste(directory, weather_forecast_input_file, sep=""))
# training the k nearest neighbour with all the traning data.
model_knn <- IBk(training_data$POWER ~ training_data$WS10, data = training_data, control = Weka_control(K=50, X=TRUE))
model_knn
View(model_knn)
# training the k nearest neighbour with all the traning data.
model_knn <- IBk(training_data$POWER ~ training_data$WS10, data = training_data, control = Weka_control(K=50, X=TRUE), distanceFunction=Euclidean)
# training the k nearest neighbour with all the traning data.
model_knn <- IBk(training_data$POWER ~ training_data$WS10, data = training_data, control = Weka_control(K=50, X=TRUE), distanceFunction=Euclidean)
#library(h2o)
#library
library(RWeka)
library(rminer)
# Read in data set with applliances
setwd(getwd())
directory <- './data/'
solution_data_file <- 'Solution.csv'
training_data_file <- 'TrainData.csv'
weather_forecast_input_file <- 'WeatherForecastInput.csv'
# Read in data set with applliances
training_data <- read.csv( paste(directory, training_data_file, sep=""))
solution_data <- read.csv( paste(directory, solution_data_file, sep=""))
input <- read.csv(paste(directory, weather_forecast_input_file, sep=""))
# training the k nearest neighbour with all the traning data.
model_knn <- IBk(training_data$POWER ~ training_data$WS10, data = training_data, control = Weka_control(K=50, X=TRUE), distanceFunction=Euclidean)
model_knn
#library(h2o)
#library
library(RWeka)
library(rminer)
# Read in data set with applliances
setwd(getwd())
directory <- './data/'
solution_data_file <- 'Solution.csv'
training_data_file <- 'TrainData.csv'
weather_forecast_input_file <- 'WeatherForecastInput.csv'
# Read in data set with applliances
training_data <- read.csv( paste(directory, training_data_file, sep=""))
solution_data <- read.csv( paste(directory, solution_data_file, sep=""))
input <- read.csv(paste(directory, weather_forecast_input_file, sep=""))
# training the k nearest neighbour with all the traning data.
model_knn <- IBk(training_data$POWER ~ training_data$WS10, data = training_data, control = Weka_control(K=50, X=TRUE), distanceFunction=Euclidean)
summary(model_knn)
#install.packages("RWeka", dependencies = TRUE)
#library
library(RWeka)
# Read in data set with applliances
setwd(getwd())
directory <- './data/'
solution_data_file <- 'Solution.csv'
training_data_file <- 'TrainData.csv'
weather_forecast_input_file <- 'WeatherForecastInput.csv'
# Read in data set with applliances
training_data <- read.csv( paste(directory, training_data_file, sep=""))
solution_data <- read.csv( paste(directory, solution_data_file, sep=""))
weather_forecast_input <- read.csv(paste(directory, weather_forecast_input_file, sep=""))
# training the k nearest neighbour with all the traning data.
model_knn <- IBk(training_data$POWER ~ training_data$WS10, data = training_data, control = Weka_control(K=50, X=TRUE), distanceFunction=Euclidean)
summary(model_knn)
# knn_pred <- knn(training_data, weather_forecast_input, )
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
# root mean square error function
rmse <- function(error)
{
sqrt(mean(error^2))
}
# generate the prediction on the test data
results_knn <- predict(model_knn, weather_forecast_input$WS10)
summary(results_knn)
#install.packages("RWeka", dependencies = TRUE)
#library
library(RWeka)
# Read in data set with applliances
setwd(getwd())
directory <- './data/'
solution_data_file <- 'Solution.csv'
training_data_file <- 'TrainData.csv'
weather_forecast_input_file <- 'WeatherForecastInput.csv'
# Read in data set with applliances
training_data <- read.csv( paste(directory, training_data_file, sep=""))
solution_data <- read.csv( paste(directory, solution_data_file, sep=""))
weather_forecast_input <- read.csv(paste(directory, weather_forecast_input_file, sep=""))
# training the k nearest neighbour with all the traning data.
model_knn <- IBk(training_data$POWER ~ training_data$WS10, data = training_data, control = Weka_control(K=50, X=TRUE))
summary(model_knn)
# knn_pred <- knn(training_data, weather_forecast_input, )
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
# root mean square error function
rmse <- function(error)
{
sqrt(mean(error^2))
}
# generate the prediction on the test data
results_knn <- predict(model_knn, weather_forecast_input$WS10)
summary(results_knn)
View(model_knn)
#install.packages("RWeka", dependencies = TRUE)
#library
library(RWeka)
# Read in data set with applliances
setwd(getwd())
directory <- './data/'
solution_data_file <- 'Solution.csv'
training_data_file <- 'TrainData.csv'
weather_forecast_input_file <- 'WeatherForecastInput.csv'
# Read in data set with applliances
training_data <- read.csv( paste(directory, training_data_file, sep=""))
solution_data <- read.csv( paste(directory, solution_data_file, sep=""))
weather_forecast_input <- read.csv(paste(directory, weather_forecast_input_file, sep=""))
# training the k nearest neighbour with all the traning data.
model_knn <- IBk(training_data$POWER ~ training_data$WS10, data = training_data, control = Weka_control(K=50, X=TRUE))
summary(model_knn)
# knn_pred <- knn(training_data, weather_forecast_input, )
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
# root mean square error function
rmse <- function(error)
{
sqrt(mean(error^2))
}
# generate the prediction on the test data
results_knn <- evaluate_Weka_classifier(model_knn, weather_forecast_input, numFolds = 0, complexity = FALSE, seed = 1, class = TRUE)
summary(results_knn)
View(results_knn)
#install.packages("RWeka", dependencies = TRUE)
#library
library(RWeka)
# Read in data set with applliances
setwd(getwd())
directory <- './data/'
solution_data_file <- 'Solution.csv'
training_data_file <- 'TrainData.csv'
weather_forecast_input_file <- 'WeatherForecastInput.csv'
# Read in data set with applliances
training_data <- read.csv( paste(directory, training_data_file, sep=""))
solution_data <- read.csv( paste(directory, solution_data_file, sep=""))
weather_forecast_input <- read.csv(paste(directory, weather_forecast_input_file, sep=""))
# training the k nearest neighbour with all the traning data.
model_knn <- IBk(training_data$POWER ~ training_data$WS10, data = training_data, control = Weka_control(K=50, X=TRUE))
summary(model_knn)
# knn_pred <- knn(training_data, weather_forecast_input, )
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
# root mean square error function
rmse <- function(error)
{
sqrt(mean(error^2))
}
# generate the prediction on the test data
results_knn <- evaluate_Weka_classifier(model_knn, weather_forecast_input, numFolds = 0, complexity = FALSE, seed = 1, class = TRUE)
summary(results_knn)
prediction_knn <- results_knn$string
#install.packages("RWeka", dependencies = TRUE)
#library
library(RWeka)
# Read in data set with applliances
setwd(getwd())
directory <- './data/'
solution_data_file <- 'Solution.csv'
training_data_file <- 'TrainData.csv'
weather_forecast_input_file <- 'WeatherForecastInput.csv'
# Read in data set with applliances
training_data <- read.csv( paste(directory, training_data_file, sep=""))
solution_data <- read.csv( paste(directory, solution_data_file, sep=""))
weather_forecast_input <- read.csv(paste(directory, weather_forecast_input_file, sep=""))
# training the k nearest neighbour with all the traning data.
model_knn <- IBk(training_data$POWER ~ training_data$WS10, data = training_data, control = Weka_control(K=50, X=TRUE))
summary(model_knn)
# knn_pred <- knn(training_data, weather_forecast_input, )
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
# root mean square error function
rmse <- function(error)
{
sqrt(mean(error^2))
}
# generate the prediction on the test data
results_knn <- evaluate_Weka_classifier(model_knn, weather_forecast_input, numFolds = 0, complexity = FALSE, seed = 1, class = TRUE)
summary(results_knn)
prediction_knn <- results_knn$string
prediction_knn
#install.packages("RWeka", dependencies = TRUE)
#library
library(RWeka)
# Read in data set with applliances
setwd(getwd())
directory <- './data/'
solution_data_file <- 'Solution.csv'
training_data_file <- 'TrainData.csv'
weather_forecast_input_file <- 'WeatherForecastInput.csv'
# Read in data set with applliances
training_data <- read.csv( paste(directory, training_data_file, sep=""))
solution_data <- read.csv( paste(directory, solution_data_file, sep=""))
weather_forecast_input <- read.csv(paste(directory, weather_forecast_input_file, sep=""))
# training the k nearest neighbour with all the traning data.
model_knn <- IBk(training_data$POWER ~ training_data$WS10, data = training_data, control = Weka_control(K=50, X=TRUE))
summary(model_knn)
# knn_pred <- knn(training_data, weather_forecast_input, )
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
# root mean square error function
rmse <- function(error)
{
sqrt(mean(error^2))
}
# generate the prediction on the test data
results_knn <- evaluate_Weka_classifier(model_knn, weather_forecast_input, numFolds = 0, complexity = FALSE, seed = 1, class = TRUE)
prediction_knn <- results_knn$string
prediction_details_knn <- results_knn$details
summary(prediction_knn)
summary(prediction_details_knn)
#install.packages("RWeka", dependencies = TRUE)
#library
#library(RWeka)
# Read in data set with applliances
setwd(getwd())
directory <- './data/'
solution_data_file <- 'Solution.csv'
training_data_file <- 'TrainData.csv'
weather_forecast_input_file <- 'WeatherForecastInput.csv'
# Read in data set with applliances
training_data <- read.csv( paste(directory, training_data_file, sep=""))
solution_data <- read.csv( paste(directory, solution_data_file, sep=""))
weather_forecast_input <- read.csv(paste(directory, weather_forecast_input_file, sep=""))
# training the k nearest neighbour with all the traning data.
model_knn <- knn.reg(training_data$POWER ~ training_data$WS10, weather_forecast_input, k = 50, algorithm=c("kd_tree", "cover_tree", "brute"))
#model_knn <- IBk(training_data$POWER ~ training_data$WS10, data = training_data, control = Weka_control(K=50, X=TRUE))
summary(model_knn)
detach("package:rminer", unload=TRUE)
detach("package:RWeka", unload=TRUE)
install.packages("knn")
#install.packages("RWeka", dependencies = TRUE)
#library
#library(RWeka)
# Read in data set with applliances
setwd(getwd())
directory <- './data/'
solution_data_file <- 'Solution.csv'
training_data_file <- 'TrainData.csv'
weather_forecast_input_file <- 'WeatherForecastInput.csv'
# Read in data set with applliances
training_data <- read.csv( paste(directory, training_data_file, sep=""))
solution_data <- read.csv( paste(directory, solution_data_file, sep=""))
weather_forecast_input <- read.csv(paste(directory, weather_forecast_input_file, sep=""))
# training the k nearest neighbour with all the traning data.
model_knn <- knn.reg(training_data$POWER ~ training_data$WS10, weather_forecast_input, k = 50, algorithm=c("kd_tree", "cover_tree", "brute"))
#model_knn <- IBk(training_data$POWER ~ training_data$WS10, data = training_data, control = Weka_control(K=50, X=TRUE))
summary(model_knn)
library("kknn", lib.loc="~/R/win-library/3.4")
detach("package:kknn", unload=TRUE)
install.packages("FNN")
#install.packages("RWeka", dependencies = TRUE)
#install.packages("FNN", dependencies = TRUE)
#library
#library(RWeka)
library(FNN)
# Read in data set with applliances
setwd(getwd())
directory <- './data/'
solution_data_file <- 'Solution.csv'
training_data_file <- 'TrainData.csv'
weather_forecast_input_file <- 'WeatherForecastInput.csv'
# Read in data set with applliances
training_data <- read.csv( paste(directory, training_data_file, sep=""))
solution_data <- read.csv( paste(directory, solution_data_file, sep=""))
weather_forecast_input <- read.csv(paste(directory, weather_forecast_input_file, sep=""))
# training the k nearest neighbour with all the traning data.
model_knn <- knn.reg(training_data$POWER ~ training_data$WS10, weather_forecast_input, k = 50, algorithm=c("kd_tree", "cover_tree", "brute"))
#model_knn <- IBk(training_data$POWER ~ training_data$WS10, data = training_data, control = Weka_control(K=50, X=TRUE))
summary(model_knn)
#install.packages("RWeka", dependencies = TRUE)
#install.packages("FNN", dependencies = TRUE)
#library
#library(RWeka)
library(FNN)
# Read in data set with applliances
setwd(getwd())
directory <- './data/'
solution_data_file <- 'Solution.csv'
training_data_file <- 'TrainData.csv'
weather_forecast_input_file <- 'WeatherForecastInput.csv'
# Read in data set with applliances
training_data <- read.csv( paste(directory, training_data_file, sep=""))
solution_data <- read.csv( paste(directory, solution_data_file, sep=""))
weather_forecast_input <- read.csv(paste(directory, weather_forecast_input_file, sep=""))
# training the k nearest neighbour with all the traning data.
model_knn <- knn.reg(training_data$POWER ~ training_data$WS10, weather_forecast_input, k = 50, algorithm=c("kd_tree", "cover_tree", "brute"))
#model_knn <-
#install.packages("RWeka", dependencies = TRUE)
#install.packages("FNN", dependencies = TRUE)
#library
#library(RWeka)
library(FNN)
# Read in data set with applliances
setwd(getwd())
directory <- './data/'
solution_data_file <- 'Solution.csv'
training_data_file <- 'TrainData.csv'
weather_forecast_input_file <- 'WeatherForecastInput.csv'
# Read in data set with applliances
training_data <- read.csv( paste(directory, training_data_file, sep=""))
solution_data <- read.csv( paste(directory, solution_data_file, sep=""))
weather_forecast_input <- read.csv(paste(directory, weather_forecast_input_file, sep=""))
# training the k nearest neighbour with all the traning data.
model_knn <- knn.reg(training_data$POWER, weather_forecast_input, y = training_data$WS10, k = 50, algorithm=c("kd_tree", "cover_tree", "brute"))
#model_knn <-
#install.packages("RWeka", dependencies = TRUE)
#install.packages("FNN", dependencies = TRUE)
#library
#library(RWeka)
library(FNN)
# Read in data set with applliances
setwd(getwd())
directory <- './data/'
solution_data_file <- 'Solution.csv'
training_data_file <- 'TrainData.csv'
weather_forecast_input_file <- 'WeatherForecastInput.csv'
# Read in data set with applliances
training_data <- read.csv( paste(directory, training_data_file, sep=""))
solution_data <- read.csv( paste(directory, solution_data_file, sep=""))
weather_forecast_input <- read.csv(paste(directory, weather_forecast_input_file, sep=""))
# training the k nearest neighbour with all the traning data.
model_knn <- knn.reg(training_data$POWER, weather_forecast_input, k = 50, algorithm=c("kd_tree", "cover_tree", "brute"))
#model_knn <-
#install.packages("RWeka", dependencies = TRUE)
install.packages("FNN", dependencies = TRUE)
#install.packages("RWeka", dependencies = TRUE)
#install.packages("FNN", dependencies = TRUE)
#library
#library(RWeka)
library(FNN)
# Read in data set with applliances
setwd(getwd())
directory <- './data/'
solution_data_file <- 'Solution.csv'
training_data_file <- 'TrainData.csv'
weather_forecast_input_file <- 'WeatherForecastInput.csv'
# Read in data set with applliances
training_data <- read.csv( paste(directory, training_data_file, sep=""))
solution_data <- read.csv( paste(directory, solution_data_file, sep=""))
weather_forecast_input <- read.csv(paste(directory, weather_forecast_input_file, sep=""))
# training the k nearest neighbour with all the traning data.
model_knn <- knn.reg(training_data$POWER ~ training_data$WS10, weather_forecast_input, k = 50, algorithm=c("kd_tree", "cover_tree", "brute"))
#model_knn <- IBk(training_data$POWER ~ training_data$WS10, data = training_data, control = Weka_control(K=50, X=TRUE))
summary(model_knn)
